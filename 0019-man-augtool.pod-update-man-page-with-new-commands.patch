From df55cac311b0a716201655ef9c5ec9790b1c86c3 Mon Sep 17 00:00:00 2001
From: Dominic Cleal <dcleal@redhat.com>
Date: Mon, 2 Jun 2014 14:14:18 +0100
Subject: [PATCH] * man/augtool.pod: update man page with new commands

Fixes RHBZ#1100077

(cherry picked from commit 242acb210d87e94f6244d85f22301caa630885c0)

Conflicts:
	NEWS
	man/augtool.1
	man/augtool.pod

* man/augtool.pod: update man page with --span option

(cherry picked from commit 3c5a185afbfee4e3156ba9e0c6e2a5b32233b0cf)

Conflicts:
	NEWS
	man/augtool.1
---
 man/augtool.1   | 198 +++++++++++++++++++++++++++++++++++++-------------------
 man/augtool.pod | 169 ++++++++++++++++++++++++++++++++++-------------
 2 files changed, 254 insertions(+), 113 deletions(-)

diff --git a/man/augtool.1 b/man/augtool.1
index 13172e9..1069286 100644
--- a/man/augtool.1
+++ b/man/augtool.1
@@ -1,4 +1,4 @@
-.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
+.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
 .\"
 .\" Standard preamble:
 .\" ========================================================================
@@ -38,6 +38,8 @@
 .    ds PI \(*p
 .    ds L" ``
 .    ds R" ''
+.    ds C`
+.    ds C'
 'br\}
 .\"
 .\" Escape single quotes in literal strings from groff's Unicode transform.
@@ -48,17 +50,24 @@
 .\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
 .\" entries marked with X<> in POD.  Of course, you'll have to process the
 .\" output yourself in some meaningful fashion.
-.ie \nF \{\
-.    de IX
-.    tm Index:\\$1\t\\n%\t"\\$2"
+.\"
+.\" Avoid warning from groff about undefined register 'F'.
+.de IX
 ..
-.    nr % 0
-.    rr F
-.\}
-.el \{\
-.    de IX
+.nr rF 0
+.if \n(.g .if rF .nr rF 1
+.if (\n(rF:(\n(.g==0)) \{
+.    if \nF \{
+.        de IX
+.        tm Index:\\$1\t\\n%\t"\\$2"
 ..
+.        if !\nF==2 \{
+.            nr % 0
+.            nr F 2
+.        \}
+.    \}
 .\}
+.rr rF
 .\"
 .\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
 .\" Fear.  Run.  Save yourself.  No user-serviceable parts.
@@ -124,7 +133,7 @@
 .\" ========================================================================
 .\"
 .IX Title "AUGTOOL 1"
-.TH AUGTOOL 1 "2012-06-05" "Augeas 0.10.0" "Augeas"
+.TH AUGTOOL 1 "2014-06-03" "Augeas 1.0.0" "Augeas"
 .\" For nroff, turn off justification.  Always turn off hyphenation; it makes
 .\" way too many mistakes in technical documents.
 .if n .ad l
@@ -142,8 +151,8 @@ changes are made by manipulating this tree and saving it back into
 native config files.
 .PP
 augtool provides a command line interface to the generated tree. \s-1COMMAND\s0
-can be a single command as described under \*(L"\s-1COMMANDS\s0\*(R". When called with
-no \s-1COMMAND\s0, it reads commands from standard input until an end-of-file is
+can be a single command as described under \*(L"\s-1COMMANDS\*(R"\s0. When called with
+no \s-1COMMAND,\s0 it reads commands from standard input until an end-of-file is
 encountered.
 .SH "OPTIONS"
 .IX Header "OPTIONS"
@@ -171,7 +180,7 @@ directories set here are searched before any directories specified in the
 \&\fI/usr/share/augeas/lenses\fR and \fI/usr/share/augeas/lenses/dist\fR.
 .IP "\fB\-f\fR, \fB\-\-file\fR=\fI\s-1FILE\s0\fR" 4
 .IX Item "-f, --file=FILE"
-Read commands from \s-1FILE\s0.
+Read commands from \s-1FILE.\s0
 .IP "\fB\-i\fR, \fB\-\-interactive\fR" 4
 .IX Item "-i, --interactive"
 Read commands from the terminal. When combined with \fB\-f\fR or redirection of
@@ -200,6 +209,10 @@ Do not load any lens modules, and therefore no files, on startup. This
 creates no entries under \f(CW\*(C`/augeas/load\*(C'\fR whatsoever; to read any files,
 they need to be set up manually and loading must be initiated with a
 \&\f(CW\*(C`load\*(C'\fR command. Using this option gives the fastest startup.
+.IP "\fB\-\-span\fR" 4
+.IX Item "--span"
+Load span positions for nodes in the tree, as they relate to the original
+file. Enables the use of the \fBspan\fR command to retrieve position data.
 .IP "\fB\-\-version\fR" 4
 .IX Item "--version"
 Print version information and exit. The version is also in the tree under
@@ -214,85 +227,134 @@ separated by \f(CW\*(C`/\*(C'\fR. In each segment, the character \f(CW\*(C`*\*(C
 every node regardless of its label. Sibling nodes with identical labels can
 be distinguished by appending \f(CW\*(C`[N]\*(C'\fR to their label to match the N\-th
 sibling with such a label. The last sibling with a specific label can be
-reached as \f(CW\*(C`[last()]\*(C'\fR. See \*(L"\s-1EXAMPLES\s0\*(R" for some examples of this.
+reached as \f(CW\*(C`[last()]\*(C'\fR. See \*(L"\s-1EXAMPLES\*(R"\s0 for some examples of this.
+.SS "\s-1ADMIN COMMANDS\s0"
+.IX Subsection "ADMIN COMMANDS"
+The following commands control the behavior of Augeas and augtool itself.
+.IP "\fBhelp\fR" 4
+.IX Item "help"
+Print this help text
+.IP "\fBload\fR" 4
+.IX Item "load"
+Load files according to the transforms in \f(CW\*(C`/augeas/load\*(C'\fR.
 .IP "\fBquit\fR" 4
 .IX Item "quit"
 Exit the program
+.IP "\fBretrieve\fR <\s-1LENS\s0> <\s-1NODE_IN\s0> <\s-1PATH\s0> <\s-1NODE_OUT\s0>" 4
+.IX Item "retrieve <LENS> <NODE_IN> <PATH> <NODE_OUT>"
+Transform tree at \s-1PATH\s0 back into text using lens \s-1LENS\s0 and store the
+resulting string at \s-1NODE_OUT.\s0 Assume that the tree was initially read in
+with the same lens and the string stored at \s-1NODE_IN\s0 as input.
+.IP "\fBsave\fR" 4
+.IX Item "save"
+Save all pending changes to disk. Unless either the \fB\-b\fR or \fB\-n\fR
+command line options are given, files are changed in place.
+.IP "\fBstore\fR <\s-1LENS\s0> <\s-1NODE\s0> <\s-1PATH\s0>" 4
+.IX Item "store <LENS> <NODE> <PATH>"
+Parse \s-1NODE\s0 using \s-1LENS\s0 and store the resulting tree at \s-1PATH.\s0
+.IP "\fBtransform\fR <\s-1LENS\s0> <\s-1FILTER\s0> <\s-1FILE\s0>" 4
+.IX Item "transform <LENS> <FILTER> <FILE>"
+Add a transform for \s-1FILE\s0 using \s-1LENS.\s0 The \s-1LENS\s0 may be a module name or a
+full lens name.  If a module name is given, then \*(L"lns\*(R" will be the lens
+assumed.  The \s-1FILTER\s0 must be either \*(L"incl\*(R" or \*(L"excl\*(R".  If the filter is
+\&\*(L"incl\*(R",  the \s-1FILE\s0 will be parsed by the \s-1LENS. \s0 If the filter is \*(L"excl\*(R",
+the \s-1FILE\s0 will be excluded from the \s-1LENS. FILE\s0 may contain wildcards.
+.SS "\s-1READ COMMANDS\s0"
+.IX Subsection "READ COMMANDS"
+The following commands are used to retrieve data from the Augeas tree.
+.IP "\fBdump-xml\fR \fI[<\s-1PATH\s0>]\fR \fI[<\s-1FILENAME\s0>]\fR" 4
+.IX Item "dump-xml [<PATH>] [<FILENAME>]"
+Print entries in the tree as \s-1XML.\s0 If \s-1PATH\s0 is given, printing starts there,
+otherwise the whole tree is printed. If \s-1FILENAME\s0 is given, the \s-1XML\s0 is saved
+to the given file.
+.IP "\fBget\fR <\s-1PATH\s0>" 4
+.IX Item "get <PATH>"
+Print the value associated with \s-1PATH\s0
+.IP "\fBlabel\fR <\s-1PATH\s0>" 4
+.IX Item "label <PATH>"
+Get and print the label associated with \s-1PATH\s0
 .IP "\fBls\fR <\s-1PATH\s0>" 4
 .IX Item "ls <PATH>"
 List the direct children of \s-1PATH\s0
 .IP "\fBmatch\fR <\s-1PATTERN\s0> [<\s-1VALUE\s0>]" 4
 .IX Item "match <PATTERN> [<VALUE>]"
-Find all paths that match \s-1PATTERN\s0. If \s-1VALUE\s0 is given, only the matching
+Find all paths that match \s-1PATTERN.\s0 If \s-1VALUE\s0 is given, only the matching
 paths whose value equals \s-1VALUE\s0 are printed
-.IP "\fBrm\fR <\s-1PATH\s0>" 4
-.IX Item "rm <PATH>"
-Delete \s-1PATH\s0 and all its children from the tree
+.IP "\fBprint\fR \fI[<\s-1PATH\s0>]\fR" 4
+.IX Item "print [<PATH>]"
+Print entries in the tree. If \s-1PATH\s0 is given, printing starts there,
+otherwise the whole tree is printed
+.IP "\fBspan\fR <\s-1PATH\s0>" 4
+.IX Item "span <PATH>"
+Print the name of the file from which the node \s-1PATH\s0 was generated, as well
+as information about the positions in the file corresponding to the label,
+the value, and the entire node. \s-1PATH\s0 must match exactly one node.
+.Sp
+You need to run 'set /augeas/span enable' prior to loading files to enable
+recording of span information. It is disabled by default.
+.SS "\s-1WRITE COMMANDS\s0"
+.IX Subsection "WRITE COMMANDS"
+The following commands are used to modify the Augeas tree.
+.IP "\fBclear\fR <\s-1PATH\s0>" 4
+.IX Item "clear <PATH>"
+Set the value for \s-1PATH\s0 to \s-1NULL.\s0 If \s-1PATH\s0 is not in the tree yet, it and all
+its ancestors will be created.
+.IP "\fBclearm\fR <\s-1BASE\s0> <\s-1SUB\s0>" 4
+.IX Item "clearm <BASE> <SUB>"
+Clear multiple nodes values in one operation. Find or create a node matching \s-1SUB\s0
+by interpreting \s-1SUB\s0 as a path expression relative to each node matching
+\&\s-1BASE.\s0 If \s-1SUB\s0 is '.', the nodes matching \s-1BASE\s0 will be modified.
+.IP "\fBins\fR \fI<\s-1LABEL\s0>\fR \fI<\s-1WHERE\s0>\fR \fI<\s-1PATH\s0>\fR" 4
+.IX Item "ins <LABEL> <WHERE> <PATH>"
+Insert a new node with label \s-1LABEL\s0 right before or after \s-1PATH\s0 into the
+tree. \s-1WHERE\s0 must be either 'before' or 'after'.
+.IP "\fBinsert\fR \fI<\s-1LABEL\s0>\fR \fI<\s-1WHERE\s0>\fR \fI<\s-1PATH\s0>\fR" 4
+.IX Item "insert <LABEL> <WHERE> <PATH>"
+Alias of \fBins\fR.
 .IP "\fBmv\fR <\s-1SRC\s0> <\s-1DST\s0>" 4
 .IX Item "mv <SRC> <DST>"
-Move node \s-1SRC\s0 to \s-1DST\s0. \s-1SRC\s0 must match exactly one node in the tree.  \s-1DST\s0
+Move node \s-1SRC\s0 to \s-1DST. SRC\s0 must match exactly one node in the tree.  \s-1DST\s0
 must either match exactly one node in the tree, or may not exist yet. If
 \&\s-1DST\s0 exists already, it and all its descendants are deleted. If \s-1DST\s0 does not
 exist yet, it and all its missing ancestors are created.
+.IP "\fBmove\fR <\s-1SRC\s0> <\s-1DST\s0>" 4
+.IX Item "move <SRC> <DST>"
+Alias of \fBmove\fR.
+.IP "\fBrename\fR <\s-1SRC\s0> <\s-1LBL\s0>" 4
+.IX Item "rename <SRC> <LBL>"
+Rename the label of all nodes matching \s-1SRC\s0 to \s-1LBL.\s0
+.IP "\fBrm\fR <\s-1PATH\s0>" 4
+.IX Item "rm <PATH>"
+Delete \s-1PATH\s0 and all its children from the tree
 .IP "\fBset\fR <\s-1PATH\s0> <\s-1VALUE\s0>" 4
 .IX Item "set <PATH> <VALUE>"
-Associate \s-1VALUE\s0 with \s-1PATH\s0. If \s-1PATH\s0 is not in the tree yet,
+Associate \s-1VALUE\s0 with \s-1PATH.\s0 If \s-1PATH\s0 is not in the tree yet,
 it and all its ancestors will be created.
-.IP "\fBclear\fR <\s-1PATH\s0>" 4
-.IX Item "clear <PATH>"
-Set the value for \s-1PATH\s0 to \s-1NULL\s0. If \s-1PATH\s0 is not in the tree yet, it and all
-its ancestors will be created.
-.IP "\fBsetm\fR <\s-1BASE\s0> <\s-1SUB\s0> <\s-1VALUE\s0>" 4
-.IX Item "setm <BASE> <SUB> <VALUE>"
+.IP "\fBsetm\fR <\s-1BASE\s0> <\s-1SUB\s0> [<\s-1VALUE\s0>]" 4
+.IX Item "setm <BASE> <SUB> [<VALUE>]"
 Set multiple nodes in one operation.  Find or create a node matching \s-1SUB\s0 by
 interpreting \s-1SUB\s0 as a path expression relative to each node matching
-\&\s-1BASE\s0. If \s-1SUB\s0 is '.', the nodes matching \s-1BASE\s0 will be modified.
-.IP "\fBget\fR <\s-1PATH\s0>" 4
-.IX Item "get <PATH>"
-Print the value associated with \s-1PATH\s0
-.IP "\fBprint\fR \fI[<\s-1PATH\s0>]\fR" 4
-.IX Item "print [<PATH>]"
-Print entries in the tree. If \s-1PATH\s0 is given, printing starts there,
-otherwise the whole tree is printed
-.IP "\fBdump-xml\fR \fI[<\s-1PATH\s0>]\fR \fI[<\s-1FILENAME\s0>]\fR" 4
-.IX Item "dump-xml [<PATH>] [<FILENAME>]"
-Print entries in the tree as \s-1XML\s0. If \s-1PATH\s0 is given, printing starts there,
-otherwise the whole tree is printed. If \s-1FILENAME\s0 is given, the \s-1XML\s0 is saved
-to the given file.
-.IP "\fBins\fR \fI<\s-1LABEL\s0>\fR \fI<\s-1WHERE\s0>\fR \fI<\s-1PATH\s0>\fR" 4
-.IX Item "ins <LABEL> <WHERE> <PATH>"
-Insert a new node with label \s-1LABEL\s0 right before or after \s-1PATH\s0 into the
-tree. \s-1WHERE\s0 must be either 'before' or 'after'.
-.IP "\fBsave\fR" 4
-.IX Item "save"
-Save all pending changes to disk. Unless either the \fB\-b\fR or \fB\-n\fR
-command line options are given, files are changed in place.
-.IP "\fBload\fR" 4
-.IX Item "load"
-Load files according to the transforms in \f(CW\*(C`/augeas/load\*(C'\fR.
-.IP "\fBdefvar\fR <\s-1NAME\s0> <\s-1EXPR\s0>" 4
-.IX Item "defvar <NAME> <EXPR>"
-Define the variable \s-1NAME\s0 to the result of evaluating \s-1EXPR\s0. The variable
-can be used in path expressions as \f(CW$NAME\fR. Note that \s-1EXPR\s0 is evaluated when
-the variable is defined, not when it is used.
+\&\s-1BASE.\s0 If \s-1SUB\s0 is '.', the nodes matching \s-1BASE\s0 will be modified.
+.IP "\fBtouch\fR <\s-1PATH\s0>" 4
+.IX Item "touch <PATH>"
+Create \s-1PATH\s0 with the value \s-1NULL\s0 if it is not in the tree yet.  All its
+ancestors will also be created.  These new tree entries will appear
+last amongst their siblings.
+.SS "\s-1PATH EXPRESSION COMMANDS\s0"
+.IX Subsection "PATH EXPRESSION COMMANDS"
+The following commands help when working with path expressions.
 .IP "\fBdefnode\fR <\s-1NAME\s0> <\s-1EXPR\s0> [<\s-1VALUE\s0>]" 4
 .IX Item "defnode <NAME> <EXPR> [<VALUE>]"
-Define the variable \s-1NAME\s0 to the result of evaluating \s-1EXPR\s0, which must be a
+Define the variable \s-1NAME\s0 to the result of evaluating \s-1EXPR,\s0 which must be a
 nodeset. If no node matching \s-1EXPR\s0 exists yet, one is created and \s-1NAME\s0 will
-refer to it. If \s-1VALUE\s0 is given, this is the same as 'set \s-1EXPR\s0 \s-1VALUE\s0'; if
+refer to it. If \s-1VALUE\s0 is given, this is the same as 'set \s-1EXPR VALUE\s0'; if
 \&\s-1VALUE\s0 is not given, the node is created as if with 'clear \s-1EXPR\s0' would and
 \&\s-1NAME\s0 refers to that node.
-.IP "\fBspan\fR <\s-1PATH\s0>" 4
-.IX Item "span <PATH>"
-Print the name of the file from which the node \s-1PATH\s0 was generated, as well
-as information about the positions in the file corresponding to the label,
-the value, and the entire node. \s-1PATH\s0 must match exactly one node.
-.Sp
-You need to run 'set /augeas/span enable' prior to loading files to enable
-recording of span information. It is disabled by default.
-.IP "\fBhelp\fR" 4
-.IX Item "help"
-Print this help text
+.IP "\fBdefvar\fR <\s-1NAME\s0> <\s-1EXPR\s0>" 4
+.IX Item "defvar <NAME> <EXPR>"
+Define the variable \s-1NAME\s0 to the result of evaluating \s-1EXPR.\s0 The variable
+can be used in path expressions as \f(CW$NAME\fR. Note that \s-1EXPR\s0 is evaluated when
+the variable is defined, not when it is used.
 .SH "ENVIRONMENT VARIABLES"
 .IX Header "ENVIRONMENT VARIABLES"
 .IP "\fB\s-1AUGEAS_ROOT\s0\fR" 4
diff --git a/man/augtool.pod b/man/augtool.pod
index cab9ac6..42e5683 100644
--- a/man/augtool.pod
+++ b/man/augtool.pod
@@ -87,6 +87,11 @@ creates no entries under C</augeas/load> whatsoever; to read any files,
 they need to be set up manually and loading must be initiated with a
 C<load> command. Using this option gives the fastest startup.
 
+=item B<--span>
+
+Load span positions for nodes in the tree, as they relate to the original
+file. Enables the use of the B<span> command to retrieve position data.
+
 =item B<--version>
 
 Print version information and exit. The version is also in the tree under
@@ -106,12 +111,69 @@ be distinguished by appending C<[N]> to their label to match the N-th
 sibling with such a label. The last sibling with a specific label can be
 reached as C<[last()]>. See L</EXAMPLES> for some examples of this.
 
+=head2 ADMIN COMMANDS
+
+The following commands control the behavior of Augeas and augtool itself.
+
 =over 4
 
+=item B<help>
+
+Print this help text
+
+=item B<load>
+
+Load files according to the transforms in C</augeas/load>.
+
 =item B<quit>
 
 Exit the program
 
+=item B<retrieve> E<lt>LENSE<gt> E<lt>NODE_INE<gt> E<lt>PATHE<gt> E<lt>NODE_OUTE<gt>
+
+Transform tree at PATH back into text using lens LENS and store the
+resulting string at NODE_OUT. Assume that the tree was initially read in
+with the same lens and the string stored at NODE_IN as input.
+
+=item B<save>
+
+Save all pending changes to disk. Unless either the B<-b> or B<-n>
+command line options are given, files are changed in place.
+
+=item B<store> E<lt>LENSE<gt> E<lt>NODEE<gt> E<lt>PATHE<gt>
+
+Parse NODE using LENS and store the resulting tree at PATH.
+
+=item B<transform> E<lt>LENSE<gt> E<lt>FILTERE<gt> E<lt>FILEE<gt>
+
+Add a transform for FILE using LENS. The LENS may be a module name or a
+full lens name.  If a module name is given, then "lns" will be the lens
+assumed.  The FILTER must be either "incl" or "excl".  If the filter is
+"incl",  the FILE will be parsed by the LENS.  If the filter is "excl",
+the FILE will be excluded from the LENS. FILE may contain wildcards.
+
+=back
+
+=head2 READ COMMANDS
+
+The following commands are used to retrieve data from the Augeas tree.
+
+=over 4
+
+=item B<dump-xml> I<[E<lt>PATHE<gt>]> I<[E<lt>FILENAMEE<gt>]>
+
+Print entries in the tree as XML. If PATH is given, printing starts there,
+otherwise the whole tree is printed. If FILENAME is given, the XML is saved
+to the given file.
+
+=item B<get> E<lt>PATHE<gt>
+
+Print the value associated with PATH
+
+=item B<label> E<lt>PATHE<gt>
+
+Get and print the label associated with PATH
+
 =item B<ls> E<lt>PATHE<gt>
 
 List the direct children of PATH
@@ -121,67 +183,91 @@ List the direct children of PATH
 Find all paths that match PATTERN. If VALUE is given, only the matching
 paths whose value equals VALUE are printed
 
-=item B<rm> E<lt>PATHE<gt>
+=item B<print> I<[E<lt>PATHE<gt>]>
 
-Delete PATH and all its children from the tree
+Print entries in the tree. If PATH is given, printing starts there,
+otherwise the whole tree is printed
 
-=item B<mv> E<lt>SRCE<gt> E<lt>DSTE<gt>
+=item B<span> E<lt>PATHE<gt>
 
-Move node SRC to DST. SRC must match exactly one node in the tree.  DST
-must either match exactly one node in the tree, or may not exist yet. If
-DST exists already, it and all its descendants are deleted. If DST does not
-exist yet, it and all its missing ancestors are created.
+Print the name of the file from which the node PATH was generated, as well
+as information about the positions in the file corresponding to the label,
+the value, and the entire node. PATH must match exactly one node.
 
-=item B<set> E<lt>PATHE<gt> E<lt>VALUEE<gt>
+You need to run 'set /augeas/span enable' prior to loading files to enable
+recording of span information. It is disabled by default.
 
-Associate VALUE with PATH. If PATH is not in the tree yet,
-it and all its ancestors will be created.
+=back
+
+=head2 WRITE COMMANDS
+
+The following commands are used to modify the Augeas tree.
+
+=over 4
 
 =item B<clear> E<lt>PATHE<gt>
 
 Set the value for PATH to NULL. If PATH is not in the tree yet, it and all
 its ancestors will be created.
 
-=item B<setm> E<lt>BASEE<gt> E<lt>SUBE<gt> E<lt>VALUEE<gt>
+=item B<clearm> E<lt>BASEE<gt> E<lt>SUBE<gt>
 
-Set multiple nodes in one operation.  Find or create a node matching SUB by
-interpreting SUB as a path expression relative to each node matching
+Clear multiple nodes values in one operation. Find or create a node matching SUB
+by interpreting SUB as a path expression relative to each node matching
 BASE. If SUB is '.', the nodes matching BASE will be modified.
 
-=item B<get> E<lt>PATHE<gt>
+=item B<ins> I<E<lt>LABELE<gt>> I<E<lt>WHEREE<gt>> I<E<lt>PATHE<gt>>
 
-Print the value associated with PATH
+Insert a new node with label LABEL right before or after PATH into the
+tree. WHERE must be either 'before' or 'after'.
 
-=item B<print> I<[E<lt>PATHE<gt>]>
+=item B<insert> I<E<lt>LABELE<gt>> I<E<lt>WHEREE<gt>> I<E<lt>PATHE<gt>>
 
-Print entries in the tree. If PATH is given, printing starts there,
-otherwise the whole tree is printed
+Alias of B<ins>.
 
-=item B<dump-xml> I<[E<lt>PATHE<gt>]> I<[E<lt>FILENAMEE<gt>]>
+=item B<mv> E<lt>SRCE<gt> E<lt>DSTE<gt>
 
-Print entries in the tree as XML. If PATH is given, printing starts there,
-otherwise the whole tree is printed. If FILENAME is given, the XML is saved
-to the given file.
+Move node SRC to DST. SRC must match exactly one node in the tree.  DST
+must either match exactly one node in the tree, or may not exist yet. If
+DST exists already, it and all its descendants are deleted. If DST does not
+exist yet, it and all its missing ancestors are created.
 
-=item B<ins> I<E<lt>LABELE<gt>> I<E<lt>WHEREE<gt>> I<E<lt>PATHE<gt>>
+=item B<move> E<lt>SRCE<gt> E<lt>DSTE<gt>
 
-Insert a new node with label LABEL right before or after PATH into the
-tree. WHERE must be either 'before' or 'after'.
+Alias of B<move>.
 
-=item B<save>
+=item B<rename> E<lt>SRCE<gt> E<lt>LBLE<gt>
 
-Save all pending changes to disk. Unless either the B<-b> or B<-n>
-command line options are given, files are changed in place.
+Rename the label of all nodes matching SRC to LBL.
 
-=item B<load>
+=item B<rm> E<lt>PATHE<gt>
 
-Load files according to the transforms in C</augeas/load>.
+Delete PATH and all its children from the tree
 
-=item B<defvar> E<lt>NAMEE<gt> E<lt>EXPRE<gt>
+=item B<set> E<lt>PATHE<gt> E<lt>VALUEE<gt>
 
-Define the variable NAME to the result of evaluating EXPR. The variable
-can be used in path expressions as $NAME. Note that EXPR is evaluated when
-the variable is defined, not when it is used.
+Associate VALUE with PATH. If PATH is not in the tree yet,
+it and all its ancestors will be created.
+
+=item B<setm> E<lt>BASEE<gt> E<lt>SUBE<gt> [E<lt>VALUEE<gt>]
+
+Set multiple nodes in one operation.  Find or create a node matching SUB by
+interpreting SUB as a path expression relative to each node matching
+BASE. If SUB is '.', the nodes matching BASE will be modified.
+
+=item B<touch> E<lt>PATHE<gt>
+
+Create PATH with the value NULL if it is not in the tree yet.  All its
+ancestors will also be created.  These new tree entries will appear
+last amongst their siblings.
+
+=back
+
+=head2 PATH EXPRESSION COMMANDS
+
+The following commands help when working with path expressions.
+
+=over 4
 
 =item B<defnode> E<lt>NAMEE<gt> E<lt>EXPRE<gt> [E<lt>VALUEE<gt>]
 
@@ -191,18 +277,11 @@ refer to it. If VALUE is given, this is the same as 'set EXPR VALUE'; if
 VALUE is not given, the node is created as if with 'clear EXPR' would and
 NAME refers to that node.
 
-=item B<span> E<lt>PATHE<gt>
-
-Print the name of the file from which the node PATH was generated, as well
-as information about the positions in the file corresponding to the label,
-the value, and the entire node. PATH must match exactly one node.
-
-You need to run 'set /augeas/span enable' prior to loading files to enable
-recording of span information. It is disabled by default.
-
-=item B<help>
+=item B<defvar> E<lt>NAMEE<gt> E<lt>EXPRE<gt>
 
-Print this help text
+Define the variable NAME to the result of evaluating EXPR. The variable
+can be used in path expressions as $NAME. Note that EXPR is evaluated when
+the variable is defined, not when it is used.
 
 =back
 
